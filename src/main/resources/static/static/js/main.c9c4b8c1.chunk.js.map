{"version":3,"sources":["reducers/ErrorReducer.js","reducers/CircularReducer.js","reducers/SecurityReducer.js","reducers/index.js","actions/types.js","Store.js","components/user/UserRegistration.js","components/adsence/HeaderAdsence.js","components/header/Header.js","components/posts/Posts.js","components/message/Messages.js","components/circular/Circular.js","components/circular/Circulars.js","actions/CircularActions.js","components/user/UserProfile.js","security/setJWTTokenToHeader.js","actions/SecurityActions.js","components/user/Login.js","components/navbar/NavigationBar.js","components/adsence/SideBarAdsence.js","components/notification/Notifications.js","components/circular/CreateCircular.js","components/user/Registration.js","App.js","serviceWorker.js","index.js"],"names":["initialState","circulars","circular","user","newUser","isValidToken","combineReducers","error","state","action","type","payload","security","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","UserRegistration","Component","HeaderAdsence","Container","style","backgroundColor","height","Header","Row","id","Col","md","paddingLeft","paddingRight","to","src","width","alt","Posts","Button","Messages","monthNames","Circular","likeButtonHandler","changedState","isLikeButtonClicked","likes","isDislikeButtonClicked","dislikes","setState","dislikeButtonHandler","bind","expirationDate","Date","this","props","title","text","getDate","getMonth","getFullYear","size","onClick","icon","faThumbsUp","faThumbsDown","Circulars","componentDidMount","getCirculars","pageNo","map","idx","key","protoType","PropTypes","object","isRequired","func","mapDispatchToProps","dispatch","a","Axios","get","res","data","content","connect","UserProfile","setJWTTokenToHeader","token","defaults","headers","common","logout","localStorage","removeItem","Login","onChangeHandler","event","target","name","value","onSubmitHandler","preventDefault","loginRequest","username","password","login","errors","Modal","centered","show","onHide","onHideHandler","closeButton","Title","Body","Form","onSubmit","Group","Control","className","classnames","placeholder","onChange","Footer","variant","post","jwtToken","setItem","decode","jwt_decode","split","response","NavigationBar","showLoginForm","onHideLoginForm","processLogout","window","confirm","location","href","Navbar","collapseOnSelect","expand","sticky","Toggle","aria-controls","Collapse","Nav","isUserLoggedIn","faBell","faEnvelope","NavDropdown","drop","Divider","Item","faPowerOff","oneOfType","SideBarAdsence","Notifications","CreateCircular","tmpUser","newCircular","console","log","Label","createCircular","history","push","Registration","validateUserInput","isVaid","tmpErrors","firstName","trim","length","lastName","confirmPassword","alert","registerUser","onResetHandler","Jumbotron","onReset","as","controlId","column","sm","onPaste","decodeJwtToken","currentTime","now","exp","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"8YAEMA,EAAe,G,QCAfA,EAAe,CACnBC,UAAW,GACXC,SAAU,ICFNF,EAAe,CACnBG,KAAM,GACNC,QAAS,GACTC,cAAc,GCADC,4BAAgB,CAC7BC,MHFa,WAAyC,IAA/BC,EAA8B,uDAAtBR,EAAcS,EAAQ,uCACrD,OAAQA,EAAOC,MACb,IINsB,aJOpB,OAAOD,EAAOE,QAEhB,QACE,OAAOH,IGHXI,SDCa,WAAyC,IAA/BJ,EAA8B,uDAAtBR,EAAcS,EAAQ,uCACrD,OAAQA,EAAOC,MACb,IET4B,mBFU1B,OAAO,2BACFF,GADL,IAEEH,eAAcI,EAAOE,QACrBR,KAAMM,EAAOE,UAGjB,QACE,OAAOH,ICVXN,SFDa,WAAyC,IAA/BM,EAA8B,uDAAtBR,EAAcS,EAAQ,uCACrD,OAAQA,EAAOC,MACb,IGNyB,gBHOvB,OAAO,2BACFF,GADL,IAEEP,UAAWQ,EAAOE,UAGtB,QACE,OAAOH,MIVPK,EAAa,CAACC,KAuBLC,EAPLC,sBACNC,EAlBiB,GAoBjBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCb5BO,E,uKARX,OACE,qD,GAHyBC,aCWhBC,G,8KARX,OACE,kBAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,gBAAiB,OAAQC,OAAQ,SACnD,iD,GAJoBL,cCoBbM,E,uKAfX,OACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,cACN,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGP,MAAO,CAAEQ,YAAa,OAAQC,aAAc,SACtD,kBAAC,IAAD,CAAMC,GAAG,KACP,yBAAKC,IAA8B,wBAAyBC,MAAM,OAAOV,OAAO,OAAOW,IAAI,yBAG/F,kBAACP,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,Y,GAVWV,a,iBCcNiB,E,uKAZX,OACE,kBAACf,EAAA,EAAD,CAAWM,GAAG,mBACZ,6BACE,kBAAC,IAAD,CAAMK,GAAG,iBACP,kBAACK,EAAA,EAAD,CAAQV,GAAG,2BAA0B,iE,GAN7BR,aCMLmB,E,uKARX,OACE,6C,GAHiBnB,a,0FCIjBoB,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YA6EnHC,E,kDA1Eb,aAAe,IAAD,8BACZ,gBAWFC,kBAAoB,WAClB,IAAIC,EAAe,EAAKpC,MACxBoC,EAAaC,qBAAuBD,EAAaC,qBACR,IAArCD,EAAaC,qBACfD,EAAaE,OAAS,GACsB,IAAxCF,EAAaG,yBACfH,EAAaG,wBAAyB,EACtCH,EAAaI,UAAY,IAG3BJ,EAAaE,OAAS,EAExB,EAAKG,SAASL,IAxBF,EA2BdM,qBAAuB,WACrB,IAAIN,EAAe,EAAKpC,MACxBoC,EAAaG,wBAA0BH,EAAaG,wBACR,IAAxCH,EAAaG,wBACfH,EAAaI,UAAY,GACgB,IAArCJ,EAAaC,sBACfD,EAAaC,qBAAsB,EACnCD,EAAaE,OAAS,IAGxBF,EAAaI,UAAY,EAE3B,EAAKC,SAASL,IArCd,EAAKpC,MAAQ,CACXsC,MAAO,EACPE,SAAU,EACVH,qBAAqB,EACrBE,wBAAwB,GAE1B,EAAKJ,kBAAoB,EAAKA,kBAAkBQ,KAAvB,gBACzB,EAAKD,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAThB,E,qDA0CZ,IAAMC,EAAiB,IAAIC,KAAKC,KAAKC,MAAMrD,SAASkD,gBAEpD,OACE,kBAAC7B,EAAA,EAAD,CAAWM,GAAG,sBACZ,kBAACD,EAAA,EAAD,CAAKC,GAAG,gBACN,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,4BAAKuB,KAAKC,MAAMrD,SAASsD,OACzB,2BAAIF,KAAKC,MAAMrD,SAASuD,OAE1B,kBAAC3B,EAAA,EAAD,CAAKC,GAAI,EAAGF,GAAG,yBACb,yCACA,yBAAKA,GAAG,gBAAgBuB,EAAeM,WACvC,6BAAMjB,EAAWW,EAAeO,YAAc,KAAOP,EAAeQ,iBAGxE,kBAAChC,EAAA,EAAD,CAAKC,GAAG,iBACN,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,gBAGA,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACQ,EAAA,EAAD,CAAQsB,KAAK,KAAKC,QAASR,KAAKX,mBAC9B,kBAAC,IAAD,CAAiBoB,KAAMC,IAAYH,KAAK,OACvCP,KAAK9C,MAAMsC,MAFd,KAGA,kBAACP,EAAA,EAAD,CAAQsB,KAAK,KAAKC,QAASR,KAAKJ,sBAC9B,kBAAC,IAAD,CAAiBa,KAAME,IAAcJ,KAAK,OAAQP,KAAK9C,MAAMwC,SAD/D,Y,GAlEW3B,aCAjB6C,E,kDACJ,aAAe,IAAD,8BACZ,gBAMFC,kBAAoB,WAClB,EAAKZ,MAAMa,aAAa,EAAK5D,MAAM6D,SANnC,EAAK7D,MAAQ,CACX6D,OAAQ,GAHE,E,qDAWJ,IACApE,EAAcqD,KAAKC,MAAnBtD,UAER,OACE,kBAACsB,EAAA,EAAD,CAAWM,GAAG,uBAEV5B,EAAUqE,KAAI,SAACpE,EAAUqE,GAAX,OACZ,kBAAC,EAAD,CAAUC,IAAKD,EAAKrE,SAAUA,Y,GAnBlBmB,aA2BxB6C,EAAUO,UAAY,CACpBxE,UAAWyE,IAAUC,OAAOC,WAC5BR,aAAcM,IAAUG,KAAKD,YAG/B,IAIME,EAAqB,CACzBV,aC1C0B,SAAAC,GAAM,8CAAI,WAAMU,GAAN,eAAAC,EAAA,sEAClBC,IAAMC,IAAI,oCAAsCb,EAAS,YADvC,OAC9Bc,EAD8B,OAEpCJ,EAAS,CACPrE,KTHyB,gBSIzBC,QAASwE,EAAIC,KAAKC,UAJgB,2CAAJ,wDD6CnBC,eARS,SAAA9E,GAAK,MAAK,CAChCP,UAAWO,EAAMN,SAASD,aAOY6E,EAAzBQ,CAA6CpB,GEpC7CqB,E,uKARX,OACE,iD,GAHoBlE,a,oCCSXmE,EATa,SAAAC,GACtBA,EACFR,IAAMS,SAASC,QAAQC,OAAvB,cAAiDH,SAG1CR,IAAMS,SAASC,QAAQC,OAAvB,e,kBCwBEC,GAAS,yDAAM,WAAMd,GAAN,SAAAC,EAAA,sDAC1Bc,aAAaC,WAAW,YACxBP,GAAoB,GACpBT,EAAS,CACPrE,KZlC4B,mBYmC5BC,QAAS,KALe,2CAAN,uD,gDCvBhBqF,G,kDACJ,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IAUR0C,gBAAkB,SAAAC,GAChB,EAAKjD,SAAL,gBAAiBiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAZjC,EAenBC,gBAAkB,SAAAJ,GAChBA,EAAMK,iBACN,IAAMC,EAAe,CACnBC,SAAU,EAAKjG,MAAMiG,SACrBC,SAAU,EAAKlG,MAAMkG,UAEvB,EAAKnD,MAAMoD,MAAMH,IAnBjB,EAAKhG,MAAQ,CACXiG,SAAU,GACVC,SAAU,GACVE,OAAQ,IAEV,EAAKX,gBAAkB,EAAKA,gBAAgB9C,KAArB,gBACvB,EAAKmD,gBAAkB,EAAKA,gBAAgBnD,KAArB,gBARN,E,qDAwBT,IACAyD,EAAWtD,KAAKC,MAAhBqD,OAER,OACE,kBAACC,GAAA,EAAD,CACEhD,KAAK,KACLiD,UAAQ,EACRC,KAAMzD,KAAKC,MAAMwD,KACjBC,OAAQ1D,KAAKC,MAAM0D,eAEnB,kBAACJ,GAAA,EAAMlF,OAAP,CAAcuF,aAAW,GACvB,kBAACL,GAAA,EAAMM,MAAP,eAEF,kBAACN,GAAA,EAAMO,KAAP,KACE,kBAACC,GAAA,EAAD,CAAMxF,GAAG,aAAayF,SAAUhE,KAAKgD,iBACnC,kBAACe,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKG,QAAN,CACEC,UAAWC,KACT,+BACA,CAAE,aAAcd,EAAOH,WAEzB/F,KAAK,QACL0F,KAAK,WACLuB,YAAY,QACZtB,MAAO/C,KAAK9C,MAAMiG,SAClBmB,SAAUtE,KAAK2C,kBAGhBW,EAAOH,UACN,yBAAKgB,UAAU,oBACZb,EAAOH,WAKd,kBAACY,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKG,QAAN,CACEC,UAAWC,KACT,+BACA,CAAE,aAAcd,EAAOF,WAEzBhG,KAAK,WACL0F,KAAK,WACLuB,YAAY,WACZtB,MAAO/C,KAAK9C,MAAMkG,SAClBkB,SAAUtE,KAAK2C,kBAGhBW,EAAOF,UACN,yBAAKe,UAAU,oBACZb,EAAOF,WAId,kBAACW,GAAA,EAAKE,MAAN,KACE,kBAAChF,EAAA,EAAD,CAAQkF,UAAU,eAAe/G,KAAK,UAAtC,YAIN,kBAACmG,GAAA,EAAMgB,OAAP,KACE,kBAAC,IAAD,CAAM3F,GAAG,YAAY4B,QAASR,KAAKC,MAAM0D,eACvC,kBAAC1E,EAAA,EAAD,CAAQsB,KAAK,KAAKiE,QAAQ,WAA1B,aAEF,kBAACvF,EAAA,EAAD,CAAQsB,KAAK,KAAKiE,QAAQ,SAAShE,QAASR,KAAKC,MAAM0D,eAAvD,yB,GAxFU5F,aA0GdyD,GAAqB,CACzB6B,MD9GmB,SAAAH,GAAY,8CAAI,WAAMzB,GAAN,mBAAAC,EAAA,+EAGfC,IAAM8C,KAAK,kBAAmBvB,GAHf,OAG3BrB,EAH2B,OAK3BM,EAAQN,EAAIC,KAAK4C,SAEvBlC,aAAamC,QAAQ,WAAYxC,GAEjCD,EAAoBC,GAEdyC,EAASC,KAAW1C,EAAM2C,MAAM,KAAK,IAE3CrD,EAAS,CACPrE,KZlB0B,mBYmB1BC,QAASuH,IAfsB,kDAmBjCnD,EAAS,CACPrE,KZzBoB,aY0BpBC,QAAS,KAAI0H,SAASjD,OArBS,0DAAJ,wDCiHlBE,gBATS,SAAA9E,GAAK,MAAK,CAChCoG,OAAQpG,EAAMD,MACdK,SAAUJ,EAAMI,YAOsBkE,GAAzBQ,CAA6CU,ICzGtDsC,G,kDACJ,WAAY/E,GAAQ,IAAD,8BACjB,cAAMA,IASRgF,cAAgB,SAAArC,GACd,EAAKjD,SAAS,CAAEsF,eAAe,KAXd,EAcnBC,gBAAkB,SAAAtC,GAChB,EAAKjD,SAAS,CAAEsF,eAAe,KAfd,EAkBnBE,cAAgB,SAAAvC,GAEZwC,OAAOC,QAAQ,4BAEf,EAAKpF,MAAMsC,SACX6C,OAAOE,SAASC,KAAO,MArBzB,EAAKrI,MAAQ,CACX+H,eAAe,GAEjB,EAAKA,cAAgB,EAAKA,cAAcpF,KAAnB,gBACrB,EAAKqF,gBAAkB,EAAKA,gBAAgBrF,KAArB,gBACvB,EAAKsF,cAAgB,EAAKA,cAActF,KAAnB,gBAPJ,E,qDA4BjB,OACE,kBAAC2F,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,OAAO,MAAMpH,GAAG,cACnD,kBAACN,EAAA,EAAD,CAAWM,GAAG,oBACZ,kBAACiH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,0BAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBvH,GAAG,yBAClB,kBAACwH,EAAA,EAAD,CAAK5B,UAAU,WACZnE,KAAKC,MAAM+F,eAAiB,kBAAC,IAAD,CAAM7B,UAAU,WAAW5F,GAAG,eAAeK,GAAG,UAAhD,SAAyE,GACtG,kBAAC,IAAD,CAAMuF,UAAU,WAAW5F,GAAG,eAAeK,GAAG,cAAhD,aACA,kBAAC,IAAD,CAAMuF,UAAU,WAAW5F,GAAG,eAAeK,GAAG,WAAhD,WAEF,kBAACmH,EAAA,EAAD,KACI/F,KAAKC,MAAM+F,eAaI,GAZf,kBAAC/H,EAAA,EAAD,CAAWM,GAAG,mCACZ,kBAACU,EAAA,EAAD,CACEsB,KAAK,KACLiE,QAAQ,YACRhE,QAASR,KAAKiF,eAHhB,SAOA,kBAAC,GAAD,CACExB,KAAMzD,KAAK9C,MAAM+H,cACjBtB,cAAe3D,KAAKkF,mBAIxBlF,KAAKC,MAAM+F,eAUI,GATf,kBAAC/H,EAAA,EAAD,CAAWM,GAAG,mCACZ,kBAAC,IAAD,CAAMK,GAAG,aACP,kBAACK,EAAA,EAAD,CACEsB,KAAK,KACLiE,QAAQ,WAFV,cAULxE,KAAKC,MAAM+F,eACV,kBAAC/H,EAAA,EAAD,CAAWiD,IAAK,GACd,kBAAC,IAAD,CAAMiD,UAAU,WAAW5F,GAAG,eAAeK,GAAG,iBAC9C,kBAAC,IAAD,CAAiB6B,KAAMwF,IAAQ1F,KAAK,SAEzB,GAEhBP,KAAKC,MAAM+F,eACV,kBAAC/H,EAAA,EAAD,CAAWiD,IAAK,GACd,kBAAC,IAAD,CAAMiD,UAAU,WAAW5F,GAAG,eAAeK,GAAG,aAC9C,kBAAC,IAAD,CAAiB6B,KAAMyF,IAAY3F,KAAK,SAE7B,GAEhBP,KAAKC,MAAM+F,eACV,kBAACG,EAAA,EAAD,CACEjG,MACE,yBAAKiE,UAAU,2BACbtF,IAA8B,cAC9BE,IAAI,WACJX,OAAO,KAAKU,MAAM,OAGtBsH,KAAK,OACL7H,GAAG,gBAEH,kBAAC,IAAD,CAAM4F,UAAU,gBAAgB5F,GAAG,wBAAwBK,GAAG,YAA9D,WACA,kBAACuH,EAAA,EAAYE,QAAb,MACA,kBAACF,EAAA,EAAYG,KAAb,KACE,kBAACrH,EAAA,EAAD,CACEV,GAAG,aACHgC,KAAK,KACLiE,QAAQ,iBACRhE,QAASR,KAAKmF,eAEd,kBAAC,IAAD,CAAiB1E,KAAM8F,MACtB,aAGU,W,GA3GLxI,aAqH5BiH,GAAc7D,UAAY,CACxB6E,eAAgB5E,IAAUoF,UAAUlF,WACpCiB,OAAQnB,IAAUG,KAAKD,YAGzB,IAIME,GAAqB,CACzBe,OAAQA,IAGKP,gBARS,SAAA9E,GAAK,MAAK,CAChC8I,eAAgB9I,EAAMI,SAASP,gBAOOyE,GAAzBQ,CAA6CgD,IClI7CyB,G,uKARX,OACE,kBAACxI,EAAA,EAAD,CAAWC,MAAO,CAAEC,gBAAiB,OAAQC,OAAQ,UACnD,iD,GAJqBL,aCad2I,I,8KAVX,OACE,yBAAKvC,UAAU,kCACb,kBAAClG,EAAA,EAAD,CAAWkG,UAAU,qBACnB,4BAAI,mD,GALcpG,cCEtB4I,G,kDACJ,aAAe,IAAD,8BACZ,gBAYFhE,gBAAkB,SAAAC,GAChBA,EAAMK,iBACN,EAAKtD,SAAL,gBAAiBiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAftC,EAkBdC,gBAAkB,SAAAJ,GAChBA,EAAMK,iBACN,IAAI2D,EAAU,CACZzD,SAAU,EAAKlD,MAAM3C,SAAST,KAAKsG,UAE/B0D,EAAc,CAClBtI,GAAI,EAAKrB,MAAMqB,GACf2B,MAAO,EAAKhD,MAAMgD,MAClBJ,eAAgB,EAAK5C,MAAM4C,eAC3BK,KAAM,EAAKjD,MAAMiD,KACjBtD,KAAM+J,GAERE,QAAQC,IAAIF,IA5BZ,EAAK3J,MAAQ,CACXqB,GAAI,GACJ2B,MAAO,GACPJ,eAAgB,GAChBK,KAAM,GACNmD,OAAQ,IAEV,EAAKX,gBAAkB,EAAKA,gBAAgB9C,KAArB,gBACvB,EAAKmD,gBAAkB,EAAKA,gBAAgBnD,KAArB,gBAVX,E,qDAmCZ,OACE,kBAAC5B,EAAA,EAAD,CAAWM,GAAG,6BACZ,kBAACwF,GAAA,EAAD,CAAMxF,GAAG,uBAAuByF,SAAUhE,KAAKgD,iBAC7C,kBAACe,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKiD,MAAN,uBACA,kBAACjD,GAAA,EAAKG,QAAN,CACEpB,KAAK,QACL1F,KAAK,OACL2F,MAAO/C,KAAK9C,MAAMgD,MAClBoE,SAAUtE,KAAK2C,mBAInB,kBAACoB,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKiD,MAAN,wBACA,kBAACjD,GAAA,EAAKG,QAAN,CACEpB,KAAK,iBACL1F,KAAK,OACL2F,MAAO/C,KAAK9C,MAAM4C,eAClBwE,SAAUtE,KAAK2C,mBAInB,kBAACoB,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKiD,MAAN,sBACA,8BACE7C,UAAU,eACV5F,GAAG,qBACHuE,KAAK,OACLC,MAAO/C,KAAK9C,MAAMiD,KAClBmE,SAAUtE,KAAK2C,mBAInB,kBAACoB,GAAA,EAAKE,MAAN,KACE,kBAAChF,EAAA,EAAD,CAAQkF,UAAU,eAAe/G,KAAK,UAAtC,e,GAvEiBW,aA+E7B4I,GAAexF,UAAY,CACzBlE,MAAOmE,IAAUC,OAAOC,WACxB1E,SAAUwE,IAAUC,OAAOC,WAC3BhE,SAAU8D,IAAUC,OAAOC,WAC3B2F,eAAgB7F,IAAUG,KAAKD,YAGjC,IAMME,GAAqB,CACzByF,eRxF4B,SAACrK,EAAUsK,GAAX,8CAAuB,WAAMzF,GAAN,SAAAC,EAAA,+EAE3CC,IAAM8C,KAAK,uBAAwB7H,GAFQ,OAGjDsK,EAAQC,KAAK,UACb1F,EAAS,CACPrE,KThBoB,aSiBpBC,QAAS,KANsC,gDASjDoE,EAAS,CACPrE,KTrBoB,aSsBpBC,QAAS,KAAI0H,SAASjD,OAXyB,yDAAvB,wDQ2FfE,gBAVS,SAAA9E,GAAK,MAAK,CAChCD,MAAOC,EAAMD,MACbL,SAAUM,EAAMN,SAASA,SACzBU,SAAUJ,EAAMI,YAOsBkE,GAAzBQ,CAA6C2E,I,mBC9FtDS,G,kDACJ,aAAe,IAAD,8BACZ,gBAqBFzE,gBAAkB,SAAAC,GAChB,EAAKjD,SAAL,gBAAiBiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAvBtC,EA0BdsE,kBAAoB,SAAAxK,GAClB,IAAIyK,GAAS,EACTC,EAAY,EAAKrK,MAAMoG,OAuB3B,OAtBuC,IAAlCzG,EAAK2K,UAAUC,OAAQC,SAC1BJ,GAAS,EACTC,EAAUC,UAAY,yBAEc,IAAjC3K,EAAK8K,SAASF,OAAQC,SACzBJ,GAAS,EACTC,EAAUI,SAAW,wBAEe,IAAjC9K,EAAKsG,SAASsE,OAAQC,SACzBJ,GAAS,EACTC,EAAUpE,SAAW,oBAEnBtG,EAAKuG,SAASsE,OAAS,IACzBJ,GAAS,EACTC,EAAUnE,SAAW,0CAEnBvG,EAAKuG,WAAavG,EAAK+K,kBACzBN,GAAS,EACTC,EAAUK,gBAAkB,0BAG9B,EAAKjI,SAAS,CAAE2D,OAAQiE,IACjBD,GAnDK,EAsDdtE,gBAAkB,SAAAJ,GAChBA,EAAMK,iBACN,IAAMnG,EAAU,CACdqG,SAAU,EAAKjG,MAAMiG,SACrBqE,UAAW,EAAKtK,MAAMsK,UACtBG,SAAU,EAAKzK,MAAMyK,SACrBvE,SAAU,EAAKlG,MAAMkG,SACrBwE,gBAAiB,EAAK1K,MAAM0K,kBAEU,IAApC,EAAKP,kBAAkBvK,GACzB+K,MAAM,8BAGN,EAAK5H,MAAM6H,aAAahL,EAAS,EAAKmD,MAAMiH,UAnElC,EAuEda,eAAiB,SAAAnF,GAef,EAAKjD,SAdU,CACbwD,SAAU,GACVqE,UAAW,GACXG,SAAU,GACVvE,SAAU,GACVwE,gBAAiB,GACjBtE,OAAQ,CACNH,SAAU,GACVqE,UAAW,GACXG,SAAU,GACVvE,SAAU,GACVwE,gBAAiB,OAjFrB,EAAK1K,MAAQ,CACXiG,SAAU,GACVqE,UAAW,GACXG,SAAU,GACVvE,SAAU,GACVwE,gBAAiB,GACjBtE,OAAQ,CACNH,SAAU,GACVqE,UAAW,GACXG,SAAU,GACVvE,SAAU,GACVwE,gBAAiB,KAGrB,EAAKjF,gBAAkB,EAAKA,gBAAgB9C,KAArB,gBACvB,EAAKwH,kBAAoB,EAAKA,kBAAkBxH,KAAvB,gBACzB,EAAKmD,gBAAkB,EAAKA,gBAAgBnD,KAArB,gBACvB,EAAKkI,eAAiB,EAAKA,eAAelI,KAApB,gBAnBV,E,qDAyFJ,IACA5C,EAAU+C,KAAKC,MAAfhD,MAER,OACE,kBAACgB,EAAA,EAAD,CAAWM,GAAG,0BACZ,kBAACyJ,GAAA,EAAD,KACE,kBAACjE,GAAA,EAAD,CAAMC,SAAUhE,KAAKgD,gBAAiBiF,QAASjI,KAAK+H,gBAClD,kBAAChE,GAAA,EAAKE,MAAN,CAAYiE,GAAI5J,IAAK6J,UAAU,yBAC7B,kBAACpE,GAAA,EAAKiD,MAAN,CAAYoB,QAAM,EAACC,GAAI,EAAG9J,GAAG,2BAA2B,gBACxD,kBAACC,EAAA,EAAD,CAAK6J,GAAI,GACP,kBAACtE,GAAA,EAAKG,QAAN,CACEC,UAAWC,KACT,+BACA,CAAE,aAAenH,EAAMuK,WAAaxH,KAAK9C,MAAMoG,OAAOkE,YAExD1E,KAAK,YACL1F,KAAK,OACLiH,YAAY,aACZtB,MAAO/C,KAAK9C,MAAMsK,UAClBlD,SAAUtE,KAAK2C,mBAEf1F,EAAMuK,WAAaxH,KAAK9C,MAAMoG,OAAOkE,YACrC,yBAAKrD,UAAU,oBACZlH,EAAMuK,UAAYvK,EAAMuK,UAAYxH,KAAK9C,MAAMoG,OAAOkE,aAM/D,kBAACzD,GAAA,EAAKE,MAAN,CAAYiE,GAAI5J,IAAK6J,UAAU,yBAC7B,kBAACpE,GAAA,EAAKiD,MAAN,CAAYoB,QAAM,EAACC,GAAI,EAAG9J,GAAG,2BAA2B,eACxD,kBAACC,EAAA,EAAD,CAAK6J,GAAI,GACP,kBAACtE,GAAA,EAAKG,QAAN,CACEC,UAAWC,KACT,+BACA,CAAE,aAAenH,EAAM0K,UAAY3H,KAAK9C,MAAMoG,OAAOqE,WAEvD7E,KAAK,WACL1F,KAAK,OACLiH,YAAY,YACZtB,MAAO/C,KAAK9C,MAAMyK,SAClBrD,SAAUtE,KAAK2C,mBAEf1F,EAAM0K,UAAY3H,KAAK9C,MAAMoG,OAAOqE,WACpC,yBAAKxD,UAAU,oBACZlH,EAAM0K,SAAW1K,EAAM0K,SAAW3H,KAAK9C,MAAMoG,OAAOqE,YAM7D,kBAAC5D,GAAA,EAAKE,MAAN,CAAYiE,GAAI5J,IAAK6J,UAAU,yBAC7B,kBAACpE,GAAA,EAAKiD,MAAN,CAAYoB,QAAM,EAACC,GAAI,EAAG9J,GAAG,2BAA2B,WACxD,kBAACC,EAAA,EAAD,CAAK6J,GAAI,GACP,kBAACtE,GAAA,EAAKG,QAAN,CACEC,UAAWC,KACT,+BACA,CAAE,aAAenH,EAAMkG,UAAYnD,KAAK9C,MAAMoG,OAAOH,WAEvDL,KAAK,WACL1F,KAAK,QACLiH,YAAY,QACZtB,MAAO/C,KAAK9C,MAAMiG,SAClBmB,SAAUtE,KAAK2C,mBAEf1F,EAAMkG,UAAYnD,KAAK9C,MAAMoG,OAAOH,WACpC,yBAAKgB,UAAU,oBACZlH,EAAMkG,SAAWlG,EAAMkG,SAAWnD,KAAK9C,MAAMoG,OAAOH,YAM7D,kBAACY,GAAA,EAAKE,MAAN,CAAYiE,GAAI5J,IAAK6J,UAAU,yBAC7B,kBAACpE,GAAA,EAAKiD,MAAN,CAAYoB,QAAM,EAACC,GAAI,EAAG9J,GAAG,2BAA2B,cACxD,kBAACC,EAAA,EAAD,CAAK6J,GAAI,GACP,kBAACtE,GAAA,EAAKG,QAAN,CACEC,UAAWC,KACT,+BACA,CAAE,aAAenH,EAAMmG,UAAYpD,KAAK9C,MAAMoG,OAAOF,WAEvDN,KAAK,WACL1F,KAAK,WACLiH,YAAY,WACZtB,MAAO/C,KAAK9C,MAAMkG,SAClBkF,QAAS,SAAA1F,GAAK,OAAIA,EAAMK,kBACxBqB,SAAUtE,KAAK2C,mBAEf1F,EAAMmG,UAAYpD,KAAK9C,MAAMoG,OAAOF,WACpC,yBAAKe,UAAU,oBACZlH,EAAMmG,SAAWnG,EAAMmG,SAAWpD,KAAK9C,MAAMoG,OAAOF,YAM7D,kBAACW,GAAA,EAAKE,MAAN,CAAYiE,GAAI5J,IAAK6J,UAAU,yBAC7B,kBAACpE,GAAA,EAAKiD,MAAN,CAAYoB,QAAM,EAACC,GAAI,EAAG9J,GAAG,2BAA2B,sBACxD,kBAACC,EAAA,EAAD,CAAK6J,GAAI,GACP,kBAACtE,GAAA,EAAKG,QAAN,CACEC,UAAWC,KACT,+BACA,CAAE,aAAenH,EAAM2K,iBAAmB5H,KAAK9C,MAAMoG,OAAOsE,kBAE9D9E,KAAK,kBACL1F,KAAK,WACLiH,YAAY,mBACZtB,MAAO/C,KAAK9C,MAAM0K,gBAClBU,QAAS,SAAA1F,GAAK,OAAIA,EAAMK,kBACxBqB,SAAUtE,KAAK2C,mBAEf1F,EAAM2K,iBAAmB5H,KAAK9C,MAAMoG,OAAOsE,kBAC3C,yBAAKzD,UAAU,oBACZlH,EAAM2K,gBAAkB3K,EAAM2K,gBAAkB5H,KAAK9C,MAAMoG,OAAOsE,mBAM3E,kBAAC7D,GAAA,EAAKE,MAAN,CAAYiE,GAAI5J,IAAK6J,UAAU,yBAC7B,kBAACpE,GAAA,EAAKiD,MAAN,CAAYoB,QAAM,EAACC,GAAI,EAAG9J,GAAG,4BAC7B,kBAACC,EAAA,EAAD,CAAK6J,GAAI,GACP,kBAACpJ,EAAA,EAAD,CAAQuF,QAAQ,UAAUpH,KAAK,UAA/B,aAEF,kBAACoB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACQ,EAAA,EAAD,CAAQ7B,KAAK,SAAb,kB,GAvNWW,aAiO3BqJ,GAAajG,UAAY,CACvBlE,MAAOmE,IAAUC,OAAOC,WACxBwG,aAAc1G,IAAUG,KAAKD,YAG/B,IAIME,GAAqB,CACzBsG,aN3M0B,SAAChL,EAASoK,GAAV,8CAAsB,WAAMzF,GAAN,SAAAC,EAAA,+EAExCC,IAAM8C,KAAK,qBAAsB3H,GAFO,OAG9CoK,EAAQC,KAAK,0BACb1F,EAAS,CACPrE,KZ7CoB,aY8CpBC,QAAS,KANmC,gDAS9CoE,EAAS,CACPrE,KZlDoB,aYmDpBC,QAAS,KAAI0H,SAASjD,OAXsB,yDAAtB,wDM8MbE,gBARS,SAAA9E,GAAK,MAAK,CAChCD,MAAOC,EAAMD,SAOyBuE,GAAzBQ,CAA6CoF,IC5NtD1C,GAAWlC,aAAakC,SAE9B,GAAIA,GAAU,CACZxC,EAAoBwC,IACpB,IAAM6D,GAAiB1D,KAAWH,GAASI,MAAM,KAAK,IACtDrH,EAAMgE,SAAS,CACbrE,KnB/B4B,mBmBgC5BC,QAASkL,KAGX,IAAMC,GAAczI,KAAK0I,MAAQ,IAC7BF,GAAeG,IAAMF,KACvB/K,EAAMgE,SAASc,MACf6C,OAAOE,SAASC,KAAO,K,IAuCZoD,G,uKAjCX,OACE,kBAAC,IAAD,CAAUlL,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAK0G,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,gBAAgBC,UAAWhL,IAC7C,kBAAC,GAAD,CAAe4G,SAAUA,KACzB,kBAACzG,EAAA,EAAD,CAAWM,GAAG,kBACZ,kBAACD,EAAA,EAAD,CAAKC,GAAG,YACN,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAG0F,UAAU,mBACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,IAAIC,UAAWlI,IACjC,kBAAC,IAAD,CAAOgI,OAAK,EAACC,KAAK,YAAYC,UAAW1B,KACzC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,aAAaC,UAAWlI,IAC1C,kBAAC,IAAD,CAAOgI,OAAK,EAACC,KAAK,SAASC,UAAW9J,IACtC,kBAAC,IAAD,CAAO4J,OAAK,EAACC,KAAK,gBAAgBC,UAAWnC,KAC7C,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,YAAYC,UAAW5J,IACzC,kBAAC,IAAD,CAAO0J,OAAK,EAACC,KAAK,WAAWC,UAAW7G,MAG5C,kBAACzD,EAAA,EAAD,CAAKC,GAAI,EAAGF,GAAG,oBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,gB,GAxBAR,aC/BEgL,QACW,cAA7B3D,OAAOE,SAAS0D,UAEe,UAA7B5D,OAAOE,SAAS0D,UAEhB5D,OAAOE,SAAS0D,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA5M,GACL6J,QAAQ7J,MAAMA,EAAM6M,a","file":"static/js/main.c9c4b8c1.chunk.js","sourcesContent":["import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}","import { GET_CIRCULARS } from \"../actions/types\";\n\nconst initialState = {\n  circulars: [],\n  circular: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CIRCULARS:\n      return {\n        ...state,\n        circulars: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  newUser: {},\n  isValidToken: false\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isValidToken: action.payload ? true : false,\n        user: action.payload\n      }\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport ErrorReducer from './ErrorReducer';\nimport CircularReducer from './CircularReducer';\nimport SecurityReducer from './SecurityReducer';\n\nexport default combineReducers({\n  error: ErrorReducer,\n  security: SecurityReducer,\n  circular: CircularReducer\n});\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const REGISTER_NEW_USER = \"REGISTER_NEW_USER\";\nexport const GET_CIRCULARS = \"GET_CIRCULARS\";\nexport const CREATE_CIRCULAR = \"CREATE_CIRCULAR\";","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (0 && window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n}\nelse {\n  store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;","import React, { Component } from 'react';\n\nclass UserRegistration extends Component {\n  render() {\n    return (\n      <div>\n        UserRegistration\n      </div>\n    )\n  }\n}\n\nexport default UserRegistration;","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap';\n\nclass HeaderAdsence extends Component {\n  render() {\n    return (\n      <Container style={{ backgroundColor: \"gray\", height: \"100%\" }}>\n        <p>advertisement</p>\n      </Container>\n    )\n  }\n}\n\nexport default HeaderAdsence;","import React, { Component } from 'react';\nimport './Header.css';\nimport { Row, Col } from 'react-bootstrap';\nimport HeaderAdsence from '../adsence/HeaderAdsence';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    return (\n      <Row id=\"tdc-header\">\n        <Col md={3} style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n          <Link to=\"/\">\n            <img src={process.env.PUBLIC_URL + \"/thedailycircular.png\"} width=\"100%\" height=\"55px\" alt=\"The Daily Circular\" />\n          </Link>\n        </Col>\n        <Col md={9} >\n          <HeaderAdsence />\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './Posts.css';\nimport { Container, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nclass Posts extends Component {\n  render() {\n    return (\n      <Container id=\"posts-container\">\n        <div>\n          <Link to='/posts/create'>\n            <Button id=\"post-a-new-circular-btn\"><strong>+ Post a new circular</strong></Button>\n          </Link>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default Posts;","import React, { Component } from 'react'\n\nclass Messages extends Component {\n  render() {\n    return (\n      <div>\n        Messages\n      </div>\n    )\n  }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport './Circulars.css';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nclass Circular extends Component {\n  constructor() {\n    super();\n    this.state = {\n      likes: 0,\n      dislikes: 0,\n      isLikeButtonClicked: false,\n      isDislikeButtonClicked: false\n    };\n    this.likeButtonHandler = this.likeButtonHandler.bind(this)\n    this.dislikeButtonHandler = this.dislikeButtonHandler.bind(this)\n  }\n\n  likeButtonHandler = () => {\n    let changedState = this.state\n    changedState.isLikeButtonClicked = !changedState.isLikeButtonClicked\n    if (changedState.isLikeButtonClicked === true) {\n      changedState.likes += 1\n      if (changedState.isDislikeButtonClicked === true) {\n        changedState.isDislikeButtonClicked = false\n        changedState.dislikes -= 1\n      }\n    } else {\n      changedState.likes -= 1\n    }\n    this.setState(changedState)\n  }\n\n  dislikeButtonHandler = () => {\n    let changedState = this.state\n    changedState.isDislikeButtonClicked = !changedState.isDislikeButtonClicked\n    if (changedState.isDislikeButtonClicked === true) {\n      changedState.dislikes += 1\n      if (changedState.isLikeButtonClicked === true) {\n        changedState.isLikeButtonClicked = false\n        changedState.likes -= 1\n      }\n    } else {\n      changedState.dislikes -= 1\n    }\n    this.setState(changedState)\n  }\n  render() {\n    const expirationDate = new Date(this.props.circular.expirationDate);\n\n    return (\n      <Container id=\"circular-container\">\n        <Row id=\"cicular-row1\">\n          <Col md={11}>\n            <h4>{this.props.circular.title}</h4>\n            <p>{this.props.circular.text}</p>\n          </Col>\n          <Col md={1} id=\"circular-deadline-col\">\n            <div>Deadline</div>\n            <div id=\"exp-date-div\">{expirationDate.getDate()}</div>\n            <div>{monthNames[expirationDate.getMonth()] + \", \" + expirationDate.getFullYear()}</div>\n          </Col>\n        </Row>\n        <Row id=\"#cicular-row2\">\n          <Col md={4}>\n            View | Share\n          </Col>\n          <Col md={8}>\n            <Button size=\"sm\" onClick={this.likeButtonHandler}>\n              <FontAwesomeIcon icon={faThumbsUp} size=\"md\" />\n              {this.state.likes} </Button>\n            <Button size=\"sm\" onClick={this.dislikeButtonHandler}>\n              <FontAwesomeIcon icon={faThumbsDown} size=\"md\" />{this.state.dislikes} </Button>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default Circular;","import React, { Component } from 'react';\nimport './Circulars.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCirculars } from '../../actions/CircularActions';\nimport { Container } from 'react-bootstrap';\nimport Circular from './Circular';\n\nclass Circulars extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pageNo: 0\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.getCirculars(this.state.pageNo);\n  }\n\n  render() {\n    const { circulars } = this.props;\n\n    return (\n      <Container id=\"circulars-container\">\n        {\n          circulars.map((circular, idx) => (\n            <Circular key={idx} circular={circular} />\n          ))\n        }\n      </Container>\n    )\n  }\n}\n\nCirculars.protoType = {\n  circulars: PropTypes.object.isRequired,\n  getCirculars: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  circulars: state.circular.circulars\n});\n\nconst mapDispatchToProps = {\n  getCirculars: getCirculars\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Circulars);","import Axios from \"axios\"\nimport { GET_CIRCULARS, GET_ERRORS } from \"./types\";\n\nexport const getCirculars = pageNo => async dispatch => {\n  const res = await Axios.get('/api/circular/get/circulars?page=' + pageNo + '&size=10');\n  dispatch({\n    type: GET_CIRCULARS,\n    payload: res.data.content\n  });\n}\n\nexport const createCircular = (circular, history) => async dispatch => {\n  try {\n    await Axios.post('/api/circular/create', circular);\n    history.push('/posts');\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n}","import React, { Component } from 'react'\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        User Profile\n      </div>\n    )\n  }\n}\n\nexport default UserProfile;","import Axios from 'axios';\n\nconst setJWTTokenToHeader = token => {\n  if (token) {\n    Axios.defaults.headers.common[\"Authorization\"] = token;\n  }\n  else {\n    delete Axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTTokenToHeader;","import Axios from 'axios';\nimport { SET_CURRENT_USER, GET_ERRORS } from './types';\nimport setJWTTokenToHeader from '../security/setJWTTokenToHeader';\nimport jwt_decode from 'jwt-decode';\n\nexport const login = loginRequest => async dispatch => {\n  try {\n    // post the loginRequest(email and password)\n    const res = await Axios.post('/api/auth/login', loginRequest);\n    // extract the JWT token\n    const token = res.data.jwtToken;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set the token in the header\n    setJWTTokenToHeader(token);\n    // decode the token\n    const decode = jwt_decode(token.split(\" \")[1]);\n    // dispatch to SecurityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decode\n    });\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTTokenToHeader(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n\nexport const registerUser = (newUser, history) => async dispatch => {\n  try {\n    await Axios.post('/api/user/register', newUser);\n    history.push(\"/registration/complete\")\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n}","import React, { Component } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/SecurityActions';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    }\n    this.props.login(loginRequest);\n  }\n\n  render() {\n    const { errors } = this.props;\n\n    return (\n      <Modal\n        size=\"sm\"\n        centered\n        show={this.props.show}\n        onHide={this.props.onHideHandler}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form id=\"login-from\" onSubmit={this.onSubmitHandler}>\n            <Form.Group>\n              <Form.Control\n                className={classnames(\n                  \"form-control from-control-lg\",\n                  { \"is-invalid\": errors.username }\n                )}\n                type=\"email\"\n                name=\"username\"\n                placeholder=\"Email\"\n                value={this.state.username}\n                onChange={this.onChangeHandler}\n              >\n              </Form.Control>\n              {errors.username && (\n                <div className=\"invalid-feedback\">\n                  {errors.username}\n                </div>\n              )}\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Control\n                className={classnames(\n                  \"form-control from-control-lg\",\n                  { \"is-invalid\": errors.password }\n                )}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={this.onChangeHandler}\n              >\n              </Form.Control>\n              {errors.password && (\n                <div className=\"invalid-feedback\">\n                  {errors.password}\n                </div>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Button className=\"form-control\" type=\"submit\">Login</Button>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Link to='/register' onClick={this.props.onHideHandler} >\n            <Button size=\"sm\" variant=\"success\">Register</Button>\n          </Link>\n          <Button size=\"sm\" variant=\"danger\" onClick={this.props.onHideHandler} >Forget Password</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nLogin.propTypes = {\n  security: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.error,\n  security: state.security\n});\n\nconst mapDispatchToProps = {\n  login: login\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\nimport './NavigationBar.css';\nimport { Navbar, Nav, Container, NavDropdown, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faBell, faPowerOff } from '@fortawesome/free-solid-svg-icons';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/SecurityActions';\nimport Login from '../user/Login';\n\nclass NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLoginForm: false\n    };\n    this.showLoginForm = this.showLoginForm.bind(this);\n    this.onHideLoginForm = this.onHideLoginForm.bind(this);\n    this.processLogout = this.processLogout.bind(this);\n  }\n\n  showLoginForm = event => {\n    this.setState({ showLoginForm: true });\n  }\n\n  onHideLoginForm = event => {\n    this.setState({ showLoginForm: false });\n  }\n\n  processLogout = event => {\n    if (\n      window.confirm(\"Do you want to logout?\")\n    ) {\n      this.props.logout();\n      window.location.href = \"/\";\n    }\n  };\n\n  render() {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" sticky=\"top\" id=\"tdc-navbar\" >\n        <Container id=\"navbar-container\">\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {this.props.isUserLoggedIn ? <Link className=\"nav-link\" id=\"tdc-nav-link\" to=\"/posts\" >Posts</Link> : \"\"}\n              <Link className=\"nav-link\" id=\"tdc-nav-link\" to=\"/circulars\" >Circulars</Link>\n              <Link className=\"nav-link\" id=\"tdc-nav-link\" to=\"/others\" >Others</Link>\n            </Nav>\n            <Nav>\n              {!this.props.isUserLoggedIn ?\n                <Container id=\"tdc-before-login-menu-container\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"secondary\"\n                    onClick={this.showLoginForm}\n                  >\n                    Login\n                  </Button>\n                  <Login\n                    show={this.state.showLoginForm}\n                    onHideHandler={this.onHideLoginForm}\n                  />\n                </Container> : \"\"\n              }\n              {!this.props.isUserLoggedIn ?\n                <Container id=\"tdc-before-login-menu-container\">\n                  <Link to=\"/register\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"success\"\n                    >\n                      Register\n                    </Button>\n                  </Link>\n                </Container> : \"\"\n              }\n\n              {this.props.isUserLoggedIn ?\n                <Container key={0}>\n                  <Link className=\"nav-link\" id=\"tdc-nav-link\" to=\"/notification\" >\n                    <FontAwesomeIcon icon={faBell} size=\"lg\" />\n                  </Link>\n                </Container> : \"\"\n              }\n              {this.props.isUserLoggedIn ?\n                <Container key={1}>\n                  <Link className=\"nav-link\" id=\"tdc-nav-link\" to=\"/messages\" >\n                    <FontAwesomeIcon icon={faEnvelope} size=\"lg\" />\n                  </Link>\n                </Container> : \"\"\n              }\n              {this.props.isUserLoggedIn ?\n                <NavDropdown\n                  title={\n                    <img className=\"rounded-circle z-depth-0\"\n                      src={process.env.PUBLIC_URL + \"/woody.jpeg\"}\n                      alt=\"user pic\"\n                      height=\"30\" width=\"30\"\n                    />\n                  }\n                  drop=\"left\"\n                  id=\"tdc-nav-link\"\n                >\n                  <Link className=\"dropdown-item\" id=\"profile-dropdown-item\" to=\"/profile\">Profile</Link>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item>\n                    <Button\n                      id=\"logout-btn\"\n                      size=\"sm\"\n                      variant=\"outline-danger\"\n                      onClick={this.processLogout}\n                    >\n                      <FontAwesomeIcon icon={faPowerOff} />\n                      {\" Logout\"}\n                    </Button>\n                  </NavDropdown.Item>\n                </NavDropdown> : \"\"\n              }\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n}\n\nNavigationBar.protoType = {\n  isUserLoggedIn: PropTypes.oneOfType.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isUserLoggedIn: state.security.isValidToken\n});\n\nconst mapDispatchToProps = {\n  logout: logout\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap';\n\nclass SideBarAdsence extends Component {\n  render() {\n    return (\n      <Container style={{ backgroundColor: \"gray\", height: \"300px\" }}>\n        <p>advertisement</p>\n      </Container>\n    )\n  }\n}\n\nexport default SideBarAdsence;","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap';\nimport './Notifications.css';\n\nclass Notifications extends Component {\n  render() {\n    return (\n      <div className=\"fluid notifications-div-holder\">\n        <Container className=\"notifications-div\">\n          <h5><u>Notifications</u></h5>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Notifications;","import React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createCircular } from '../../actions/CircularActions';\n\nclass CreateCircular extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      title: \"\",\n      expirationDate: \"\",\n      text: \"\",\n      errors: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  onChangeHandler = event => {\n    event.preventDefault();\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    let tmpUser = {\n      username: this.props.security.user.username\n    };\n    const newCircular = {\n      id: this.state.id,\n      title: this.state.title,\n      expirationDate: this.state.expirationDate,\n      text: this.state.text,\n      user: tmpUser \n    };\n    console.log(newCircular);\n    // this.props.createCircular(newCircular, this.props.history);\n  }\n\n  render() {\n    return (\n      <Container id=\"create-circular-container\">\n        <Form id=\"create-circular-from\" onSubmit={this.onSubmitHandler}>\n          <Form.Group>\n            <Form.Label>Circular Title</Form.Label>\n            <Form.Control\n              name=\"title\"\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.onChangeHandler}\n            >\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Expiration Date</Form.Label>\n            <Form.Control\n              name=\"expirationDate\"\n              type=\"date\"\n              value={this.state.expirationDate}\n              onChange={this.onChangeHandler}\n            >\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Circular Body</Form.Label>\n            <textarea\n              className=\"form-control\"\n              id=\"circular-text-area\"\n              name=\"text\"\n              value={this.state.text}\n              onChange={this.onChangeHandler}\n            >\n            </textarea>\n          </Form.Group>\n          <Form.Group>\n            <Button className=\"form-control\" type=\"submit\">Post</Button>\n          </Form.Group>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nCreateCircular.protoType = {\n  error: PropTypes.object.isRequired,\n  circular: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n  createCircular: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  error: state.error,\n  circular: state.circular.circular,\n  security: state.security\n});\n\nconst mapDispatchToProps = {\n  createCircular: createCircular\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCircular);","import React, { Component } from 'react';\nimport './LoginRegistration.css';\nimport { Container, Form, Row, Col, Jumbotron, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/SecurityActions';\nimport classnames from 'classnames';\n\nclass Registration extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {\n        username: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.validateUserInput = this.validateUserInput.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.onResetHandler = this.onResetHandler.bind(this);\n  }\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  validateUserInput = user => {\n    let isVaid = true;\n    let tmpErrors = this.state.errors;\n    if ((user.firstName.trim()).length === 0) {\n      isVaid = false;\n      tmpErrors.firstName = \"First Name is reqired\";\n    }\n    if ((user.lastName.trim()).length === 0) {\n      isVaid = false;\n      tmpErrors.lastName = \"Last Name is reqired\";\n    }\n    if ((user.username.trim()).length === 0) {\n      isVaid = false;\n      tmpErrors.username = \"Email is reqired\";\n    }\n    if (user.password.length < 8) {\n      isVaid = false;\n      tmpErrors.password = \"Password must be at least 8 characters\";\n    }\n    if (user.password !== user.confirmPassword) {\n      isVaid = false;\n      tmpErrors.confirmPassword = \"Password doesnot match\";\n    }\n\n    this.setState({ errors: tmpErrors });\n    return isVaid;\n  }\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n    if (this.validateUserInput(newUser) === false) {\n      alert(\"Provided data is not valid\");\n    }\n    else {\n      this.props.registerUser(newUser, this.props.history);\n    }\n  }\n\n  onResetHandler = event => {\n    let tmpState = {\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {\n        username: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }\n    };\n    this.setState(tmpState);\n  }\n\n  render() {\n    const { error } = this.props;\n\n    return (\n      <Container id=\"registration-container\">\n        <Jumbotron>\n          <Form onSubmit={this.onSubmitHandler} onReset={this.onResetHandler}>\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm={3} id=\"registration-form-label\">{\"First Name: \"}</Form.Label>\n              <Col sm={9}>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (error.firstName || this.state.errors.firstName) }\n                  )}\n                  name=\"firstName\"\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                  value={this.state.firstName}\n                  onChange={this.onChangeHandler}\n                />\n                {(error.firstName || this.state.errors.firstName) && (\n                  <div className=\"invalid-feedback\">\n                    {error.firstName ? error.firstName : this.state.errors.firstName}\n                  </div>\n                )}\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm={3} id=\"registration-form-label\">{\"Last Name: \"}</Form.Label>\n              <Col sm={9}>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (error.lastName || this.state.errors.lastName) }\n                  )}\n                  name=\"lastName\"\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                  value={this.state.lastName}\n                  onChange={this.onChangeHandler}\n                />\n                {(error.lastName || this.state.errors.lastName) && (\n                  <div className=\"invalid-feedback\">\n                    {error.lastName ? error.lastName : this.state.errors.lastName}\n                  </div>\n                )}\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm={3} id=\"registration-form-label\">{\"Email: \"}</Form.Label>\n              <Col sm={9}>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (error.username || this.state.errors.username) }\n                  )}\n                  name=\"username\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={this.state.username}\n                  onChange={this.onChangeHandler}\n                />\n                {(error.username || this.state.errors.username) && (\n                  <div className=\"invalid-feedback\">\n                    {error.username ? error.username : this.state.errors.username}\n                  </div>\n                )}\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm={3} id=\"registration-form-label\">{\"Password: \"}</Form.Label>\n              <Col sm={9}>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (error.password || this.state.errors.password) }\n                  )}\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onPaste={event => event.preventDefault()}\n                  onChange={this.onChangeHandler}\n                />\n                {(error.password || this.state.errors.password) && (\n                  <div className=\"invalid-feedback\">\n                    {error.password ? error.password : this.state.errors.password}\n                  </div>\n                )}\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm={3} id=\"registration-form-label\">{\"Confirm Password: \"}</Form.Label>\n              <Col sm={9}>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (error.confirmPassword || this.state.errors.confirmPassword) }\n                  )}\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={this.state.confirmPassword}\n                  onPaste={event => event.preventDefault()}\n                  onChange={this.onChangeHandler}\n                />\n                {(error.confirmPassword || this.state.errors.confirmPassword) && (\n                  <div className=\"invalid-feedback\">\n                    {error.confirmPassword ? error.confirmPassword : this.state.errors.confirmPassword}\n                  </div>\n                )}\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm={3} id=\"registration-form-label\"></Form.Label>\n              <Col sm={2}>\n                <Button variant=\"success\" type=\"submit\">Register</Button>\n              </Col>\n              <Col md={7}>\n                <Button type=\"reset\">Reset</Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Jumbotron>\n      </Container>\n    )\n  }\n}\n\nRegistration.protoType = {\n  error: PropTypes.object.isRequired,\n  registerUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  error: state.error\n});\n\nconst mapDispatchToProps = {\n  registerUser: registerUser\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col, Container } from 'react-bootstrap';\n\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nimport UserRegistration from './components/user/UserRegistration';\nimport Header from './components/header/Header';\nimport Posts from './components/posts/Posts'\nimport Messages from './components/message/Messages';\nimport Circulars from './components/circular/Circulars';\nimport UserProfile from './components/user/UserProfile';\nimport NavigationBar from './components/navbar/NavigationBar';\nimport SideBarAdsence from './components/adsence/SideBarAdsence';\nimport Notifications from './components/notification/Notifications';\nimport CreateCircular from './components/circular/CreateCircular';\nimport Registration from './components/user/Registration';\n\nimport jwt_decode from 'jwt-decode';\nimport setJWTTokenToHeader from './security/setJWTTokenToHeader';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/SecurityActions';\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTTokenToHeader(jwtToken);\n  const decodeJwtToken = jwt_decode(jwtToken.split(\" \")[1]);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decodeJwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decodeJwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Header />\n            <Route exact path=\"/registration\" component={UserRegistration} />\n            <NavigationBar jwtToken={jwtToken} />\n            <Container id=\"main-container\">\n              <Row id=\"main-row\">\n                <Col md={9} className=\"changeable-area\">\n                  <Switch>\n                    <Route exact path=\"/\" component={Circulars} />\n                    <Route exact path=\"/register\" component={Registration} />\n                    <Route exact path=\"/circulars\" component={Circulars} />\n                    <Route exact path=\"/posts\" component={Posts} />\n                    <Route exact path=\"/posts/create\" component={CreateCircular} />\n                    <Route exact path=\"/messages\" component={Messages} />\n                    <Route exact path=\"/profile\" component={UserProfile} />\n                  </Switch>\n                </Col>\n                <Col md={3} id=\"notification-col\">\n                  <SideBarAdsence />\n                  <Notifications />\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}